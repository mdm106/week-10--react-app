{"version":3,"sources":["squares/Square.js","squares/Squares.js","signup/Password.js","signup/SignUp.js","button/Button.js","max/Counter.js","max/Max.js","form/Label.js","form/Input.js","form/Button.js","form/Form.js","form/FormTwo.js","hooks/Clicked.js","hooks/Square.js","hooks/ToggleText.js","hooks/Counter.js","hooks/StepCounter.js","hooks/CatchMeifYouCan.js","hooks/RollCall.js","hooks/PasswordStrength.js","hooks/TempConverter.js","hooks/List.js","reducers/ClickedR.js","reducers/StepCounterR.js","reducers/TempConverterR.js","Challenges.js","axios/axios.js","news/Articles.js","news/Comments.js","news/CreateComment.js","news/Article.js","news/CreateArticle.js","ToDo/reducer.js","ToDo/List.js","App.js","serviceWorker.js","index.js"],"names":["Square","colour","selected","handleClick","className","onClick","style","width","height","backgroundColor","defaultProps","Squares","props","state","this","setState","Component","Password","label","value","passed","handleChange","onChange","type","SignUp","input","confirm","minimumLength","length","e","currentTarget","Button","count","bind","currentValue","handleUpdate","Counter","counter","handleClickPlus","handleClickMinus","highlight","Max","numbers","map","number","index","step","values","max","currentNumber","newNumber","highest","Math","key","Label","htmlFor","textTransform","Input","field","id","name","handleSubmit","Form","email","handleName","handleEmail","preventDefault","FormTwo","inputs","fields","slice","Clicked","useState","clicked","setClicked","toggle","setToggle","ToggleText","initial","alternate","setCounter","StepCounter","newCount","CatchMeIfYouCan","jump","transform","RollCall","names","setIndex","PasswordStrength","setInput","TempConverter","fahrenheit","setFahrenheit","celsius","setCelsius","toFixed","List","items","setItems","item","reducer","action","buttonClicked","ClickedR","useReducer","dispatch","StepCounterR","plusCounter","minusCounter","toCelsius","toFahrenheit","TempConverterR","handleCelsius","handleFahrenheit","target","Challenges","console","log","axios","create","baseURL","headers","Accept","Authorization","Articles","loaded","articles","get","then","data","article","to","title","tags","tag","Comments","comments","articleID","comment","CreateComment","handleComment","post","onSubmit","Article","content","CreateArticle","handleTitle","handleArticle","handleTags","formattedTags","split","task","completed","addItem","filter","_","i","removeItem","val","updateItem","completeItem","initialState","clickedIndex","updateClicked","updateIndex","cursor","textDecoration","border","class","handleEdit","App","exact","path","component","render","match","params","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e7519e02.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Square = ({ colour, selected, handleClick }) => (\n    <div className=\"mb-4\" onClick={ handleClick } style={{ width: 200, height: 200, backgroundColor: selected ? \"green\" : colour}}>\n    </div>\n);\n\nSquare.defaultProps = {\n    colour: \"hotpink\"\n};\n\nexport default Square;","import React, { Component } from \"react\";\n\nimport Square from \"./Square\";\n\nclass Squares extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { selected: 1 };\n    }\n\n    render() {\n        return (\n            <>\n                {/*  */}\n                <Square \n                    selected={ this.state.selected === 1 } // if state.selected === 1 then selected will be true, if not false\n                    handleClick={ () => this.setState({ selected: 1 })} /> \n                {/* function to set state.selected is passed as props to square */}\n                <Square \n                    // colour props could be used here but default colour props used instead\n                    selected={ this.state.selected === 2 }\n                    handleClick={ () => this.setState({ selected: 2})} />\n            </>\n        );\n    }\n}\n\nexport default Squares;","// import React, { Component } from \"react\";\nimport React from \"react\";\n\nconst Password = ({ label, value, passed, handleChange }) => (\n        <label>{ label }\n            <input\n            value={ value }\n            onChange={ handleChange }\n            type={\"password\"}\n            className={\"form-control \" + (passed ? \"is-valid\" : \"is-invalid\")}\n            />\n        </label>\n);\n\nexport default Password;","import React, { Component } from \"react\";\n\nimport Password from \"./Password\";\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { input: \"\",\n                    confirm: \"\" };\n    }\n\n    render() {\n        let { minimumLength } = this.props;\n\n        let { input, confirm } = this.state;\n\n        let passed = input === confirm && input.length > minimumLength;\n\n        return (\n            <form className=\"form-group\">\n                <Password \n                    label=\"Password\"\n                    value={ input }\n                    passed={ passed }\n                    handleChange={ (e) => this.setState({ input: e.currentTarget.value })} /> \n                <Password\n                    label=\"Confirm Password\"\n                    value={ confirm }\n                    passed={ passed }\n                    handleChange={ (e) => this.setState({ confirm: e.currentTarget.value })} />\n            </form>\n        );\n    }\n}\n\nSignUp.defaultProps = {\n    minimumLength: 12,\n};\n\nexport default SignUp;","import React, { Component } from \"react\";\n\nclass Button extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            count: 0,\n        };\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        let currentValue = this.state.count + 1;\n        this.setState({ count: currentValue });\n        let { handleUpdate } = this.props;\n        handleUpdate(currentValue);\n    }\n\n    render() {\n        let { count } = this.state;\n\n        return (\n            <button className=\"btn btn-primary\" onClick={ this.handleClick }>{count}</button>\n        )\n    }\n}\n\nexport default Button;","import React from \"react\";\n\nconst Counter = ({ counter, handleClickPlus, handleClickMinus, highlight }) => (\n    <div className={\"mb-4\" + (highlight ? \" alert-warning\" : \"\")} >\n        <h5>Counter: {counter} </h5>\n        <div className=\"d-flex flex-row\">\n            <button className=\"btn-lg btn-success mb-4\" onClick={handleClickPlus}>+</button>\n            <button className=\"btn-lg btn-danger mb-4\" onClick={handleClickMinus}>-</button>\n        </div>\n    </div>\n)\n\nexport default Counter;","import React, { Component } from \"react\";\n\nimport Counter from \"./Counter\";\n\nclass Max extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { numbers: props.count.map((number) => number) };//use a map as just using this.props.count means the count gets updated\n    }\n\n    handleChange(index, step) {\n        let values = this.state.numbers;\n        let { max } = this.props;\n        let currentNumber = values[index];\n        let newNumber = currentNumber + step;\n        values[index] = newNumber <= max && newNumber >= 0 ? newNumber : currentNumber; //to prevent exceeding max or going below 0\n        this.setState({ numbers: values });\n    }\n    \n    render() {\n        let { count } = this.props;\n\n        let { numbers } = this.state;\n        let highest = Math.max(...numbers); // to return the highest value of numbers\n\n        return (\n            <> \n            {count.map((number, index) => (\n                <Counter key= { index } \n                        counter= { numbers[index] }\n                        handleClickPlus={ () => this.handleChange(index, 1) }\n                        handleClickMinus={ () => this.handleChange(index, -1) }\n                        highlight={ numbers[index] === highest }     />\n            )) }\n            \n            </>\n        );\n    }\n}\n\nMax.defaultProps = {\n    count: [5, 10, 15],\n    max: 30,\n};\n\n\n\nexport default Max;","import React from \"react\";\n\nconst Label = ({ label }) => (\n    <label htmlFor={label} style={{textTransform: \"capitalize\"}}>{label}</label>\n);\n\nexport default Label;","import React from \"react\";\n\nconst Input = ({ field, type, input, handleChange }) => (\n    <input className=\"form-control\"\n           id={field}\n           name={field}\n           type={type}\n           value={ input }\n           onChange={handleChange} />\n);\n\nexport default Input;","import React from \"react\";\n\nconst Button = ({ handleSubmit }) => (\n    <button className=\"btn btn-primary\"\n            type=\"submit\"\n            onClick={handleSubmit}>Submit</button>\n);\n\nexport default Button;","import React, { Component } from \"react\";\n\nimport Label from './Label';\nimport Input from './Input';\nimport Button from './Button';\n\nclass Form extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: \"\",\n            email: \"\",\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleName = this.handleName.bind(this);\n        this.handleEmail = this.handleEmail.bind(this);\n    }\n\n    handleName(e) {\n        this.setState({ name: e.currentTarget.value });\n    }\n\n    handleEmail(e) {\n        this.setState({ email: e.currentTarget.value });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        let { handleSubmit } = this.props;\n        handleSubmit({...this.state});\n        this.setState({ name: \"\", email: \"\"});\n    }\n\n    render() {\n        let { name, email } = this.state;\n\n        return (\n            <form>\n                <div className=\"form-group\">\n                    <Label label=\"name\" />\n                    <Input field=\"name\"\n                           type=\"text\"\n                           input={ name }\n                           handleChange={(e) => this.handleName(e)} />\n                    <Label label=\"email\" />\n                    <Input field=\"email\"\n                           type=\"email\"\n                           input={ email }\n                           handleChange={(e) => this.handleEmail(e)} />\n                </div>\n                <Button handleSubmit={(e) => this.handleSubmit(e)}>Submit</Button>\n            </form>\n        )\n    }\n}\n\nexport default Form;","import React, { Component } from \"react\";\n\nimport Label from './Label';\nimport Input from './Input';\nimport Button from './Button';\n\nclass FormTwo extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state =  { inputs: props.fields.map(() => \"\") };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e, index) {\n        let inputs = this.state.inputs.slice(); /// as slice has no arguments it creates new array in memory, and allows to add to a specific index\n        inputs[index] = e.currentTarget.value; /// so the input with index 0 is given the value from the 0 index of the fields.map below etc\n        this.setState({ inputs });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        let { handleSubmit } = this.props;\n        handleSubmit({...this.state});\n        this.setState({ inputs: this.props.fields.map(() => \"\")});\n    }\n\n    render() {\n        let { inputs } = this.state;\n\n        let { fields } = this.props\n\n        return (\n            <form>\n               {fields.map((field, index) => (\n                <div className=\"form-group\" key={ index }>\n                <Label label={field.label} />\n                <Input field={field.label}\n                           type={field.type}\n                           input={ inputs[index] }\n                           handleChange={(e) => this.handleChange(e, index)} />\n                </div>\n            )) }\n                <Button handleSubmit={(e) => this.handleSubmit(e)}>Submit</Button>\n            </form>\n        )\n    }\n}\n\nFormTwo.defaultProps = {\n    fields: [\n        { label: \"Name\", name: \"name\", type: \"text\" },\n        { label: \"E-mail\", name: \"email\", type: \"email\" },\n        { label: \"Telephone Number\", name: \"telephone\", type: \"tel\" },\n        { label: \"Date of Birth\", name: \"dob\", type: \"date\" },\n    ],\n};\n\nexport default FormTwo;","import React, { useState } from 'react';\n\nconst Clicked = () => {\n    const [clicked, setClicked] = useState(false);\n\n    const updateClicked = () => setClicked(true);\n\n    return <p onClick={ updateClicked }>\n        {!clicked ? \"Not Clicked\" : \"Clicked\"}\n        </p>\n\n}\n\nexport default Clicked;","import React, { useState } from 'react';\n\nconst Square = ({ colour }) => {\n    const [toggle, setToggle] = useState(true);\n\n    const updateToggle = () => setToggle(!toggle);\n\n    return <div className=\"mb-4\"\n                onClick={ updateToggle }\n                style={{ width: 200,\n                         height: 200,\n                         backgroundColor: toggle ? \"green\" : colour}}>\n           </div>;\n\n}\n\nSquare.defaultProps = {\n    colour: \"hotpink\"\n};\n\nexport default Square;","import React, { useState } from 'react';\n\nconst ToggleText = ({ initial, alternate }) => {\n    const [toggle, setToggle] = useState(true);\n\n    const updateToggle = () => setToggle(!toggle);\n\n    return (\n        <>\n            <p>\n                {toggle ? initial : alternate}\n            </p>\n            <button className=\"btn-primary mb-4\" onClick={ updateToggle }>\n                Toggle\n            </button>\n        </>\n    )\n\n}\n\nToggleText.defaultProps = {\n    initial: \"Hello\",\n    alternate: \"World\"\n};\n\nexport default ToggleText;","import React, { useState } from 'react';\n\nconst Counter = ({ initial, max }) => {\n    const [counter, setCounter] = useState(initial);\n\n    const handlePlus = () => setCounter(counter < max ? counter + 1 : counter); //event handler\n\n    const handleMinus = () => setCounter(counter > 0 ? counter - 1 : counter); //event handler\n\n    return (\n        <>\n            <p>Counter: {counter} </p>\n            <div className=\"d-flex flex-row\">\n                <button className=\"btn-success\" onClick={ handlePlus }>+</button>\n                <button className=\"btn-danger\" onClick={ handleMinus }>-</button>\n            </div>\n        </>\n    )\n\n}\n\nCounter.defaultProps = {\n    initial: 50,\n    max: 100\n};\n\nexport default Counter;","import React, { useState } from 'react';\n\nconst StepCounter = ({ max, step }) => {\n    const [counter, setCounter] = useState(0);\n\n    const plusCounter = () => {\n        let newCount = counter + step;\n        setCounter(newCount <= max ? newCount : counter)\n    }\n\n    const minusCounter = () => {\n        let newCount = counter - step;\n        setCounter(newCount >= 0 ? newCount : counter);\n    }\n\n    return (\n        <>\n            <p>Counter: {counter} </p>\n            <div className=\"d-flex flex-row\">\n                <button className=\"btn-success\" onClick={ plusCounter }>+</button>\n                <button className=\"btn-danger\" onClick={ minusCounter }>-</button>\n            </div>\n        </>\n    )\n\n}\n\nStepCounter.defaultProps = {\n    max: 100,\n    step: 5\n};\n\nexport default StepCounter;","import React, { useState } from 'react';\n\nconst CatchMeIfYouCan = ({ jump }) => {\n    const [counter, setCounter] = useState(0);\n\n    const handleClick = () => setCounter(counter + jump );//event handler\n    \n    return (\n        <button className=\"btn-primary mb-2\" \n                onClick={ handleClick }\n                style={{ transform: `translateY(${counter}px)`}}>\n                    Jump\n        </button>\n    )\n    }\n\nCatchMeIfYouCan.defaultProps = {\n    jump: 100\n};\n\nexport default CatchMeIfYouCan;","import React, { useState } from 'react';\n\nconst RollCall = ({ names }) => {\n    const [index, setIndex] = useState(0);\n\n    const updateIndex = () => setIndex(index < names.length - 1 ? index + 1 : 0 );\n\n    return (\n        <>  \n            <p>Name: { names[index] }</p>\n            <button className=\"btn-primary mb-4\" onClick={ updateIndex }>Next</button>\n        </>\n    )\n\n}\n\nRollCall.defaultProps = {\n    names: [\"Tom\", \"Dick\", \"Harry\"],\n};\n\nexport default RollCall;","import React, { useState } from 'react';\n\nconst setColour = (length) => { //pure function as just takes a value and returns a value so can be declared anywhere and only is rendered once when the app comes up\n    if (length === 0) {\n        return \"\"\n    }\n\n    if(length < 9) {\n        return \"red\"\n    }\n\n    if(length < 16) {\n        return \"orange\"\n    }\n\n    return \"green\"\n}\n\nconst PasswordStrength = () => {\n    const [input, setInput] = useState(\"\");\n\n    const updateInput = (e) => setInput( e.currentTarget.value )\n    \n\n    return (\n        <form className=\"form-group\">\n            <label>Password:\n            <input\n            value={ input }\n            onChange={ updateInput }\n            type={\"password\"}\n            style={{backgroundColor: setColour(input.length)}}\n            />\n            </label>\n        </form>\n    )\n\n}\n\n\nexport default PasswordStrength;","import React, { useState } from 'react';\n\nconst toCelsius = (value) => {\n    return (value-32) * 5/9;\n}\n\nconst toFahrenheit = (value) => {\n    return (value * (9/5))+32;\n}\n\nconst TempConverter = () => {\n    const [fahrenheit, setFahrenheit] = useState(\"32\");\n\n    const [celsius, setCelsius] = useState(\"0\");\n\n    const handleCelsius = (e) => {\n        let input = +e.currentTarget.value;\n        setFahrenheit(toFahrenheit(input).toFixed(2));\n        setCelsius(`${input}`);\n    };\n         \n    const handleFahrenheit = (e) => {\n        let input = +e.currentTarget.value;\n        setCelsius(toCelsius(input).toFixed(2));\n        setFahrenheit(`${input}`);\n    }\n\n    return (\n        <form className=\"form-group\">\n            <label>Fahrenheit:</label>\n            <input\n            value={ fahrenheit }\n            onChange={ handleFahrenheit }\n            type={\"number\"}\n            />\n            <label>Celsius:</label>\n            <input\n            value={ celsius }\n            onChange={ handleCelsius }\n            type={\"number\"}\n            />\n        </form>\n    )\n\n}\n\n\nexport default TempConverter;","import React, { useState } from 'react';\n\nconst List = () => {\n    const [input, setInput] = useState(\"\");\n\n    const [items, setItems] = useState([]);\n\n    const handleChange = (e) => {\n        setInput(e.currentTarget.value);\n    };\n         \n    const handleClick = (e) => {\n        setItems([...items, input]); //square brackets to ensure items is an array\n        setInput(\"\"); //resets input when the button is clicked\n    }\n\n    return(\n        <>  \n            <input\n                value={ input }\n                onChange={ handleChange }\n                type=\"text\"\n                className=\"mb-1\"\n            />\n            <button className=\"btn-primary\" onClick={ handleClick }>\n                Add Item\n            </button>\n            <ul>\n                {items.map((item, index) => (\n                    <li key= { index }>\n                        { item }\n                    </li>\n                ))}\n            </ul>\n        </>\n    )\n\n}\n\n\nexport default List;","import React, { useReducer } from 'react';\n\n//initial state\nconst initial = {\n    clicked: false,\n};\n\n//reducer functions\nconst buttonClicked = state => {\n    return {\n        ...state,\n        clicked: true,\n    };\n};\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"BUTTON_CLICKED\": return buttonClicked(state);\n        default: return state;\n    }\n};\n\n//the clicked component\nconst ClickedR = () => {\n    //useReducer returns the *current* state\n    // and a dispatch function\n    const [ { clicked }, dispatch ] = useReducer(reducer, initial); \n    //double destructuring of state i.e. could have just put state as first value of duple and destructured state in next line\n    \n    return (\n        <p onClick={ () => dispatch({ type: \"BUTTON_CLICKED\" }) }>\n        {!clicked ? \"Not Clicked\" : \"Clicked\"}\n        </p>\n    );\n\n}\n\nexport default ClickedR;","import React, { useReducer } from 'react';\n\n//the initial state\nconst initial = {\n    counter: 0,\n};\n\n\nconst StepCounterR = ({ max, step }) => {\n    //reducer functions\n    const plusCounter = state => {\n        let newCount = state.counter + step;\n        return {\n            ...state,\n            counter: newCount <= max ? newCount : state.counter,\n        }\n    };\n\n    const minusCounter = state => {\n        let newCount = state.counter - step;\n        return {\n            ...state,\n            counter: newCount >= 0 ? newCount : state.counter,\n        }   \n    };\n\n    const reducer = (state, action) => {\n        switch (action.type) {\n            case \"PLUS_CLICKED\": return plusCounter(state);\n            case \"MINUS_CLICKED\": return minusCounter(state);\n            default: return state;\n        }\n    };\n\n    //the StepCounter component\n    const [ { counter }, dispatch] = useReducer(reducer, initial);\n\n    return (\n        <>\n            <p>Counter: {counter} </p>\n            <div className=\"d-flex flex-row\">\n                <button className=\"btn-success\" onClick={ () => dispatch({ type: \"PLUS_CLICKED\" }) }>+</button>\n                <button className=\"btn-danger\" onClick={ () => dispatch({ type: \"MINUS_CLICKED\" }) }>-</button>\n            </div>\n        </>\n    )\n    \n    };\n\nStepCounterR.defaultProps = {\n    max: 100,\n    step: 5\n};\n\nexport default StepCounterR;","import React, { useReducer } from 'react';\n\n//initial state\nconst initial = {\n    fahrenheit: \"32\",\n    celsius: \"0\",\n};\n\n// conversion functions\nconst toCelsius = (value) => {\n    return (value-32) * 5/9;\n};\n\nconst toFahrenheit = (value) => {\n    return (value * (9/5))+32;\n};\n\nconst TempConverterR = () => {\n\n    //reducer functions\n    const handleCelsius = (state, value) => {\n        return {\n            ...state,\n            fahrenheit: toFahrenheit(+value).toFixed(2),\n            celsius: `${value}`,\n        }\n    };\n\n    const handleFahrenheit = (state, value) => {\n        return {\n            ...state,\n            celsius: toCelsius(+value).toFixed(2),\n            fahrenheit: `${value}`,\n        }\n    };\n\n    const reducer = (state, action) => {\n        switch (action.type) {\n            case \"CELSIUS_CHANGE\": return handleCelsius(state, action.value);\n            case \"FAHRENHEIT_CHANGE\": return handleFahrenheit(state, action.value);\n            default: return state;\n        }\n    };\n\n    const [{ fahrenheit, celsius}, dispatch] = useReducer(reducer, initial);\n\n    return (\n        <form className=\"form-group\">\n            <label>Fahrenheit:\n                <input\n                value={ fahrenheit }\n                onChange={ (e) => dispatch({ type: \"FAHRENHEIT_CHANGE\", value: e.target.value}) }\n                type={\"number\"}\n                />\n            </label>\n            <label>Celsius:\n                <input\n                value={ celsius }\n                onChange={ (e) => dispatch({ type: \"CELSIUS_CHANGE\", value: e.target.value}) }\n                type={\"number\"}\n                />\n            </label>\n        </form>\n    )\n\n};\n\n\nexport default TempConverterR;","import React from 'react';\n\nimport './App.css';\n\nimport Squares from './squares/Squares';\nimport SignUp from './signup/SignUp';\nimport Button from './button/Button';\nimport Max from './max/Max';\nimport Form from './form/Form';\nimport FormTwo from './form/FormTwo';\nimport Clicked from './hooks/Clicked';\nimport Square from './hooks/Square';\nimport ToggleText from './hooks/ToggleText';\nimport Counter from './hooks/Counter';\nimport StepCounter from './hooks/StepCounter';\nimport CatchMeIfYouCan from './hooks/CatchMeifYouCan';\nimport RollCall from './hooks/RollCall';\nimport PasswordStrength from './hooks/PasswordStrength';\nimport TempConverter from './hooks/TempConverter';\nimport List from './hooks/List';\nimport ClickedR from './reducers/ClickedR';\nimport StepCounterR from './reducers/StepCounterR';\nimport TempConverterR from './reducers/TempConverterR';\n\nconst Challenges = () => {\n  return (\n    <>\n        <Squares />\n        <SignUp />\n        <Max />\n        <Button handleUpdate={ console.log } />\n        <Form handleSubmit={ console.log } />\n        <FormTwo handleSubmit={ console.log } />\n        <Clicked />\n        <Square />\n        <ToggleText />\n        <Counter />\n        <StepCounter />\n        <CatchMeIfYouCan />\n        <RollCall />\n        <PasswordStrength />\n        <TempConverter />\n        <List />\n        <ClickedR />\n        <StepCounterR />\n        <TempConverterR />\n    </>\n  );\n}\n\nexport default Challenges;","// import the library version of axios\nimport axios from \"axios\";\n\n// create a version of axios with useful defaults\nexport default axios.create({\n    baseURL: \"https://restful.training/api/blog\",\n    headers: {\n        // make sure we get JSON back\n        Accept: \"application/json\",\n\n        // use your own key\n        Authorization: \"Bearer Oy97PZCqPTYVnqxZcehxcoydXp7W3zot3QgI5kLshvoMjOOUYXEXD2dHQKCIITFjocHQcR4hOq9Gm7mu\",\n    },\n});","import React, { Component } from \"react\";\nimport axios from '../axios/axios';\nimport { Link } from \"react-router-dom\";\n\nclass Articles extends Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        loaded: false,\n        articles: [],\n      };\n    }\n  \n    // runs when the component first renders\n    componentDidMount() {\n      // make the GET request\n      axios.get(\"/articles\").then(({ data }) => {\n        // once the data has come back update the component state\n        this.setState({\n          loaded: true,\n          articles: data.data,\n        });\n      });\n    }\n  \n    render() {\n      let { articles, loaded } = this.state;\n  \n      return !loaded ? <p>Loading...</p> : (\n        <div className=\"container\">\n          <h1 className=\"display-3\">Great Blog</h1>\n          <ul className=\"list-group\">\n            { articles.map(article => (\n              <li key={ article.id } className=\"list-group-item\">\n                  <Link to={`/news/${article.id}`}>\n                  { article.title }\n                  </Link>\n                    {article.tags.map((tag, index) => (\n                        <span className=\"float-right badge badge-primary badge-pill\" key={index}>\n                            {tag}\n                        </span>\n                    ))}\n              </li>\n            )) }\n          </ul>\n        </div>\n      );\n    }\n  }\n  \n  export default Articles;","import React, { Component } from \"react\";\nimport axios from '../axios/axios';\n\nclass Comments extends Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        loaded: false,\n        comments: [],\n      };\n    }\n  \n    // runs when the component first renders\n    componentDidMount() {\n      let { articleID } = this.props;\n      axios.get(`/articles/${articleID}/comments`).then(({ data }) => {\n        this.setState({\n          loaded: true,\n          comments: data.data,\n        });\n      });\n    }\n  \n    render() {\n      let { comments, loaded } = this.state;\n  \n      return !loaded ? <p>Loading...</p> : (\n        <div className=\"container\">\n          <h4 className=\"display-4\">Comments</h4>\n          <ul className=\"list-group\">\n          { comments.map(comment => (\n              <li key={ comment.id } className=\"list-group-item\">\n                  <p><strong>{ comment.email }</strong></p>\n                  <p>{ comment.comment }</p>\n              </li>\n          ))}\n          </ul>\n        </div>\n      );\n    }\n  }\n\n  \n  \n  export default Comments;","import React, { Component } from \"react\";\nimport axios from '../axios/axios';\n\nclass CreateComment extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            comment: \"\",\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleEmail= this.handleEmail.bind(this);\n        this.handleComment= this.handleComment.bind(this);\n    }\n\n    handleEmail(e) {\n        this.setState({\n            email: e.currentTarget.value\n        })\n    }\n\n    handleComment(e) {\n        this.setState({\n            comment: e.currentTarget.value\n        })\n    }\n\n    handleSubmit(e) {\n        // get the values of some controlled components\n        let { email, comment } = this.state;\n\n        let { articleID } = this.props;\n\n        axios.post(`/articles/${articleID}/comments`, { \n            email: email,\n            comment: comment,\n        }).then(() => {\n            // once the server responds successfully, clear the inputs\n            this.setState({ email: \"\", comment: \"\", }); \n        });\n\n    }\n\n    render() {\n        let { email, comment } = this.state;\n        return (\n            <>\n                <div className=\"container\">\n                    <form className=\"mt-4\" onSubmit={ this.handleSubmit }>\n                        <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input className=\"form-control\"\n                            id=\"email\"\n                            name=\"email\"\n                            type=\"text\"\n                            value={ email }\n                            onChange={ this.handleEmail }\n                        />\n                        <label htmlFor=\"comment\">Comment</label>\n                        <input className=\"form-control\"\n                            id=\"comment\"\n                            name=\"comment\"\n                            type=\"text\"\n                            value={ comment }\n                            onChange={ this.handleComment }\n                        />\n                        </div>\n                        <button className=\"btn btn-primary\"type=\"submit\">Add Comment</button>\n                    </form>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default CreateComment;","import React, { Component } from \"react\";\nimport axios from '../axios/axios';\n\nimport Comments from './Comments';\nimport CreateComment from './CreateComment';\n\nclass Article extends Component {\n    constructor(props) {\n      super(props);\n  \n      this.state = {\n        loaded: false,\n        article: {}, //empty object because article is an object\n      };\n    }\n  \n    // runs when the component first renders\n    componentDidMount() {\n      // make the GET request\n      let id = this.props.articleID;\n      axios.get(`/articles/${id}`).then(({ data }) => {\n        this.setState({\n          loaded: true,\n          article: data.data,\n        });\n      });\n    }\n  \n    render() {\n      let { article, loaded } = this.state;\n  \n      return !loaded ? <p>Loading...</p> : (\n        <>\n        <div className=\"container\">\n          <h1 className=\"display-3\">Great Blog</h1>\n          <h3>{ article.title }</h3>\n          <p>{article.content}</p>\n            {article.tags.map((tag, index) => (\n                <span className=\"float-right badge badge-primary badge-pill\" key={index}>\n                    {tag}\n                </span>\n            ))}\n        </div>\n        <Comments articleID={article.id} />\n        <CreateComment articleID={article.id} /> \n        </>\n      );\n    }\n  }\n  \n  export default Article;","import React, { Component } from \"react\";\nimport axios from '../axios/axios';\n\nclass CreateArticle extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: \"\",\n            article: \"\",\n            tags: \"\",\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleTitle = this.handleTitle.bind(this);\n        this.handleArticle = this.handleArticle.bind(this);\n        this.handleTags = this.handleTags.bind(this);\n    }\n\n    handleTitle(e) {\n        this.setState({\n            title: e.currentTarget.value\n        })\n    }\n\n    handleArticle(e) {\n        this.setState({\n            article: e.currentTarget.value\n        })\n    }\n\n    handleTags(e) {\n        this.setState({\n            tags: e.currentTarget.value\n        })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault(); //keeps page from refreshing when it is submitted\n        let { title, article, tags } = this.state;\n        //RegEx to split words with any comma and space\n        let formattedTags = tags.split(/\\s*,\\s*/);\n        console.log(formattedTags);\n        axios.post(\"/articles\", { \n            title: title,\n            content: article,\n            tags: formattedTags\n        }).then(() => {\n            // once the server responds successfully, clear the inputs\n            this.setState({ title: \"\", article: \"\", tags: \"\" }); \n        });\n    }\n\n    render() {\n        let { title, article, tags } = this.state;\n        return (\n            <>\n                <div className=\"container\">\n                    <h1 className=\"display-3\">Great Blog</h1>\n                </div>\n                <div className=\"container\">\n                    <form className=\"mt-4\" onSubmit={ this.handleSubmit }>\n                        <div className=\"form-group\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input className=\"form-control\"\n                            id=\"title\"\n                            name=\"title\"\n                            type=\"text\"\n                            value={ title }\n                            onChange={ this.handleTitle } //slight performance issues with anonymous function inline, potentially better to split out // when the annoymous function is called\n                        />\n                        <label htmlFor=\"title\">Article</label>\n                        <input className=\"form-control\"\n                            id=\"article\"\n                            name=\"article\"\n                            type=\"text\"\n                            value={ article }\n                            onChange={ this.handleArticle }\n                        />\n                        <label htmlFor=\"title\">Tags</label>\n                        <input className=\"form-control\"\n                            id=\"tags\"\n                            name=\"tags\"\n                            type=\"text\"\n                            value={ tags }\n                            onChange={ this.handleTags }\n                        />\n                        </div>\n                        <button className=\"btn btn-primary\"type=\"submit\">Create</button>\n                    </form>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default CreateArticle;","export const addItem = (state, { value }) => {\n    return {\n        ...state,\n        items: [...state.items,{task: value, \n                completed: false}]\n    }\n};\n\n\nexport const removeItem = (state, { index }) => {\n    return {\n        ...state,\n        items: state.items.filter((_, i) => i !== index),\n    }\n};\n\nexport const updateItem = (state, {index, value}) => {\n    return {\n        ...state,\n        items: state.items.map((val, i) => i===index ? {...val, task: value} : val),\n    }\n};\n\nexport const completeItem = (state, {index}) => {\n    return {\n        ...state,\n        items: state.items.map((val, i) => i===index ? {...val, completed: true} : val),\n    }\n};\n\nexport default (state, action) => {\n    switch (action.type) {\n        case \"NEW_ITEM\" : return addItem(state, action);\n        case \"REMOVE_ITEM\" : return removeItem(state, action);\n        case \"CHANGE_ITEM\" : return updateItem(state, action);\n        case \"MARK_COMPLETED\" : return completeItem(state, action);\n        default: return state;\n    }\n};\n","import React, { useState, useReducer } from \"react\";\nimport reducer from './reducer';\n\n// initial state\n// put in some dummy content to start with\nconst initialState = {\n  items: [],\n};\n\n// component\nconst List = () => {\n  // setup reducer\n  \n  // get items from state\n  const [{ items }, dispatch] = useReducer(reducer, initialState);\n\n  // controlled component stuff\n  // keep track of input value\n  // easier to keep out of reducer\n  const [input, setInput] = useState(\"\");\n\n  // update input state\n  const handleInput = (e) => {\n    setInput(e.currentTarget.value);\n  };\n\n  //handleSubmit will edit if clicked = true i.e. if a \n  const handleSubmit = (e) => {\n      e.preventDefault();\n      if(clicked) {\n          setInput(\"\");\n          setClicked(false);\n          dispatch({type: \"CHANGE_ITEM\", index: clickedIndex, value: input});\n      } else {\n        setInput(\"\");\n        dispatch({type: \"NEW_ITEM\", value: input})\n      }\n      \n  }\n\n  const handleEdit = (e, index) => {\n      e.preventDefault();\n      updateClicked();\n      updateIndex(index);\n  }\n  //to set state as being a clicked edit button and the index of that button\n  const [clicked, setClicked] = useState(false);\n  const [clickedIndex, setIndex] = useState(\"\");\n\n  const updateClicked = () => setClicked(!clicked);\n  const updateIndex = (i) => setIndex(i);\n\n\n  return (\n    <div className=\"card\">\n      <form className=\"card-header\" onSubmit={ handleSubmit }>\n        { /* add task input */ }\n        <input\n          className=\"form-control\"\n          onChange={ handleInput }\n          value={ input }\n        />\n      </form>\n\n      <div className=\"card-body\">\n        { /* show items if there are any */ }\n        { items.length === 0 ? <p className=\"card-text\">No list items</p> : (\n          <ul className=\"list-group list-group-flush\">\n            { items.map((item, index) => (\n              <li\n                key={ index }\n                className=\"list-group-item d-flex justify-content-between align-items-center\"\n              >\n                { /* strike-through for completed items */ }\n                <span\n                  className=\"flex-grow-1\"\n                  style={ {\n                    cursor: \"pointer\",\n                    textDecoration: item.completed ? \"line-through\" : \"\",\n                    border: clicked && clickedIndex === index ? \"2px solid red\" : \"\",\n                  } }\n                  onClick={ () => dispatch({type: \"MARK_COMPLETED\", index: index})}\n                >{ item.task }</span>\n\n                { /* edit button */ }\n                <button class=\"btn btn-sm btn-primary mr-1\" onClick={ (e) => handleEdit(e, index) }>Edit</button>\n\n                { /* remove button */ }\n                <button class=\"btn btn-sm btn-danger\" onClick={ () => dispatch({ type: \"REMOVE_ITEM\", index: index }) }>&times;</button>\n              </li>\n            )) }\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default List;","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nimport './App.css';\n\nimport Challenges from './Challenges';\nimport Articles from './news/Articles';\nimport Article from './news/Article';\nimport CreateArticle from './news/CreateArticle';\nimport List from './ToDo/List';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={ Challenges } />\n        <Route exact path=\"/news/create\" component={ CreateArticle } />\n        <Route exact path=\"/news\" component={ Articles } />\n        <Route path=\"/news/:id\" render={ ({ match }) => ( \n          <Article articleID={ match.params.id } />\n        ) } />\n        <Route exact path=\"/list\" component={ List } />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}